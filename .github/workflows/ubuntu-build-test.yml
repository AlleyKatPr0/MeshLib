# This is a basic workflow to help you get started with Actions

name: Ubuntu checks

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ubuntu-build-test:
    timeout-minutes: 40
    runs-on: [self-hosted, linux, x64, ubuntu-20-lts]
    strategy:
      matrix:
        config: [Debug, Release]
        compiler: [Сlang 11, GCC 10]
        include:
          - compiler: Сlang 11
            cxx-compiler: /usr/bin/clang++-11
            c-compiler: /usr/bin/clang-11
          - compiler: GCC 10
            cxx-compiler: /usr/bin/g++-10
            c-compiler: /usr/bin/gcc-10

    steps:
      # https://github.com/actions/checkout/issues/354#issuecomment-759282642
      - name: Clear workspace
        run: |
          rm -rf ${{ github.workspace }} && mkdir ${{ github.workspace }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install thirdparty libs
        run: ./scripts/runner_install_thirdparty.sh

      - name: Build
        run: ./scripts/build_source.sh
        env:
          MESHRUS_BUILD_RELEASE: ${{ fromJSON('["OFF", "ON"]')[matrix.config == 'Release'] }}
          MESHRUS_BUILD_DEBUG: ${{ fromJSON('["OFF", "ON"]')[matrix.config == 'Debug'] }}
          CMAKE_CXX_COMPILER: ${{ matrix.cxx-compiler }}
          # not realy needed
          CMAKE_C_COMPILER: ${{ matrix.c-compiler }}

      - name: Unit Tests
        run: ./build/${{ matrix.config }}/bin/MRTest
        
      - name: Python Tests
        working-directory: ./build/${{ matrix.config }}/bin
        run: python3 ./../../../scripts/run_python_test_script.py

      - name: Clear workspace
        run: |
          rm -rf ${{ github.workspace }} && mkdir ${{ github.workspace }}
